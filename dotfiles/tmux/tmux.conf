##############################
#  _
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  < 
#  \__|_| |_| |_|\__,_/_/\_\
#
#############################
#
# COPY AND PASTE
# http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
#
# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
# unbind -t vi-copy Enter
# bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"
#
############################################################################
############################################################################
# Reset Prefix
############################################################################
set -g prefix 'C-\'
bind 'C-\' send-prefix
unbind C-b

############################################################################
# Global options
############################################################################
# large history
set-option -g history-limit 10000

# colors
setw -g mode-bg black
set-option -g default-terminal "screen-256color" #"xterm-256color" # "screen-256color"
set-option -g pane-active-border-fg green

# utf8 support
#set-window-option -g utf8 on


# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on
set-window-option -g window-status-current-fg white
setw -g window-status-current-attr reverse

# Automatically set window title
setw -g automatic-rename
set-option -g set-titles on

# use mouse # More on mouse support http://floriancrouzat.net/2010/07/run-tmux-with-mouse-support-in-mac-os-x-terminal-app/
#setw -g mode-mouse on
#setw -g mouse-resize-pane on
#set -g mouse-select-window on
#set -g mouse-select-pane on
set -g mouse on
set -g history-limit 30000
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# vi movement keys
# set-option -g status-keys vi

############################################################################
# Status Bar
############################################################################
#set-option -g status-utf8 on
# set-option -g status-justify right
# set-option -g status-bg black # colour213 # pink
# set-option -g status-fg cyan
# set-option -g status-interval 5
# set-option -g status-left-length 30
# set-option -g status-left '#[fg=magenta]» #[fg=blue,bold]#T#[default]'
# set-option -g status-right '#[fg=red,bold][[ #(git branch) branch ]] #[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
set-option -g visual-activity on

# Titles (window number, program name, active (or not)
# set-option -g set-titles on
# set-option -g set-titles-string '#H:#S.#I.#P #W #T'


############################################################################
# Unbindings
############################################################################
#unbind [ # copy mode bound to escape key


############################################################################
# Bindings
############################################################################
# reload tmux conf
bind-key r source-file ~/.tmux.conf

#bind Escape copy-mode

# new split in current pane (horizontal / vertical)
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split
bind-key v split-window -h # split pane vertically
bind-key s split-window -v # split pane horizontally

# list panes
# bind-key Space list-panes

# break-pane
# bind-key Enter break-pane

# join-pane [-dhv] [-l size | -p percentage] [-s src-pane]
# [-t:dst-window.dst-pane] (destination window (dot) destination pane
#                (alias: joinp)
#
#bind C-j command-prompt "joinp"
#bind C-j command-prompt "join-pane"
#bind-key j command-prompt "join-pane -s '%%'"
#bind-key j command-prompt "joinp -t:0"
# bind-key Space command-prompt "joinp -t:%%" # %% = prompt for window.pane [-V|H] # vert|hor split

#previous pane
# bind-key -n C-up prev
# bind-key -n C-left prev

#next pane
# bind-key -n C-right next
# bind-key -n C-down next

############################################################################
# windows
############################################################################
set-window-option -g window-status-current-bg red
bind S-Left previous-window
bind S-Right next-window
bind-key C-a last-window # C-\ C-a for last active window
# bind A command-prompt "rename-window %%"

# By default, all windows in a session are constrained to the size of the 
# smallest client connected to that session, 
# even if both clients are looking at different windows. 
# It seems that in this particular case, Screen has the better default 
# where a window is only constrained in size if a smaller client 
# is actively looking at it.
setw -g aggressive-resize on

############################################################################
# panes
############################################################################
# Navigation ---------------------------------------------------------------
# use the vim motion keys to move between panes
unbind j
bind-key j select-pane -D
unbind k
bind-key k select-pane -U
unbind h
bind-key h select-pane -L
unbind l
bind-key l select-pane -R

# Pane Resizing ---------------------------------------------------------------
bind-key C-h resize-pane -L 3
bind-key C-j resize-pane -D 3
bind-key C-k resize-pane -U 3
bind-key C-l resize-pane -R 3

# use vim motion keys while in copy mode
setw -g mode-keys vi


############################################################################
# layouts
############################################################################
bind o select-layout "active-only"
bind M-- select-layout "even-vertical"
bind M-| select-layout "even-horizontal"
bind M-r rotate-window


# focus on first window
# select-window -t 0

############################################################################
# Status Bar
############################################################################
# status bar:
set -g status-fg white
set -g status-bg black
set -g status-justify centre
set-option -gw window-status-current-format '#{?pane_synchronized,#[fg=blue][#[default],}#I:#W#F#{?pane_synchronized,#[fg=blue]]#[default],}'
set-option -gw window-status-format '#{?pane_synchronized,#[fg=colour240][#[default],}#I:#W#F#{?pane_synchronized,#[fg=colour240]]#[default],}'
    # adds a prompt when synchronize-panes is active
set -g status-interval 1
set -g status-left-length 30
set -g status-left '#[fg=colour239,bold][S #[fg=colour042]#S#[fg=colour239,bold]]' # colour042 slightly paler green
set -g status-right '#[fg=colour239,bold][U #[fg=yellow]#(whoami)#[fg=colour042,bold]:#[fg=blue]#H#[fg=colour239,bold]]#[default] #[fg=white,bold]%H:%M:%S %Z#[default]'

# default window title colors:
set-window-option -g window-status-fg colour240 # base
set-window-option -g window-status-bg default
set-window-option -g window-status-attr bright

# active window title colors:
set-window-option -g window-status-current-fg colour166 # orange
set-window-option -g window-status-current-bg default # dark grey colour234
set-window-option -g window-status-current-attr bright


# clock:
set-window-option -g clock-mode-colour colour240 # grey

# toggle synchronization to all panes:
unbind-key i
bind-key i set-window-option synchronize-panes

# --- Endo of tmux.conf --- #
