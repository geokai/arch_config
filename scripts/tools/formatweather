#!/bin/bash

#################################################################################
#### 
#### Update weather forecast and current weather information from
#### [Darksky](https://darksky.org)
#### 
#### This script accesses the darkweatherreport json file and extracts the
#### requires items of data.
#### These items of data are used to construct the weather block in the i3blocks
#### status bar, and for the notification pop-up when the weather block is
#### left-clicked.
#### 
#################################################################################

#################################################################################
#### 
#### Author: George Kaimakis - https://github.com/geokai
#### This file was created on 18 Apr 2020
#### 
#################################################################################


## darksky decimal percentages, 0 - 1 % ##
# example percentages, 1    == 100%
#                      0.1  ==  10%
#                      0.7  ==  70%
#                      0.78 ==  78%
#                      0.07 ==   7%
#                      0.01 ==   1%
#                      0    ==   0%
# convert decimal percentages to human readable:
_percentage(){
    if [ ${#1} == 1 ] && [ $1 -eq 0 ]; then
        _result=0
        echo $_result && return
    fi
    if [ ${#1} == 1 ] && [ $1 -eq 1 ]; then
        _result=$(($1 * 100))
        echo $_result
    elif [ ${#1} -gt 1 ]; then
        _int_result="$(echo $1 | sed -e 's/^0//;s/\.//')"
        if [ ${#_int_result} == 1 ]; then
            _result="$(echo $_int_result | sed 's/$/0/')"
            echo $_result
        else
            _result="$(echo $_int_result | sed 's/^0//')"
            echo $_result
        fi
    fi
}


# remove quote marks from string values:
_stringify(){
    _stringed="$(echo $1 | sed 's/\"//g')"
    echo $_stringed
}


_weatherData=$1
[[ -s $_weatherData ]] || { dunstify " " "Weather Information Not Available." && exit 1; }


## format darksky weather infomation:
## access json file and retrieve data:

# currently:
_time="$(jq '.currently.time | strflocaltime("%d-%m-%Y %H:%M:%S")' $_weatherData)" && \
    _str_time="$(_stringify "$_time")"
    printf "%s:\t\t%s\n" "Time of Report" "$_str_time"
_summary="$(jq '.currently.summary' $_weatherData)" && \
    _str_summary="$(_stringify "$_summary")"
    printf "%s:\t%s\n" "Current Summary" "$_str_summary"
_temperature="$(jq '.currently.temperature' $_weatherData)" && \
    printf "%s:\t\t%.1f C\n" "Current Temp" "$_temperature"
_pressure="$(jq '.currently.pressure' $_weatherData)" && \
    printf "%s:\t%s %s\n" "Current Pressure" "$_pressure" "mb/hPa"
_humidity="$(jq '.currently.humidity' $_weatherData)" && \
    _int_humidity="$(_percentage $_humidity)"
    printf "%s:\t%s %s\n" "Current Humidity" "$_int_humidity" "%RH"
_precipProbability="$(jq '.currently.precipProbability' $_weatherData)" && \
    _int_precipProbability="$(_percentage $_precipProbability)"
    printf "%s:\t%s %s\n" "Current Precip Prob" "$_int_precipProbability" "%"
_windSpeed="$(jq '.currently.windSpeed' $_weatherData)" && \
    printf "%s:\t%.1f %s\n" "Current Windspeed" "$_windSpeed" "km/h"
_windGust="$(jq '.currently.windGust' $_weatherData)" && \
    printf "%s:\t%.1f %s\n" "Current Wind Gust" "$_windGust" "km/h"
_windBearing="$(jq '.currently.windBearing' $_weatherData)" && \
    printf "%s:\t%s %s\n" "Current Wind Bearing" "$_windBearing" "Deg"
_cloudCover="$(jq '.currently.cloudCover' $_weatherData)" && \
    _int_cloudCover="$(_percentage $_cloudCover)"
    printf "%s:\t%s %s\n" "Current Cloud Cover" "$_int_cloudCover" "%"
_uvIndex="$(jq '.currently.uvIndex' $_weatherData)" && \
    printf "%s:\t%s\n" "Current UV Index" "$_uvIndex"
echo

# hourly:
_time="$(jq '.hourly.data[0].time' $_weatherData)"
_summary="$(jq '.hourly.data[0].summary' $_weatherData)" && \
    _str_summary="$(_stringify "$_summary")"
    printf "%s:\t\t%s\n" "Hourly Summary" "$_str_summary"
_temperature="$(jq '.hourly.data[0].temperature' $_weatherData)"
_precipProbability="$(jq '.hourly.data[0].precipProbability' $_weatherData)"
_windSpeed="$(jq '.hourly.data[0].windSpeed' $_weatherData)"
_windBearing="$(jq '.hourly.data[0].windBearing' $_weatherData)"
_cloudCover="$(jq '.hourly.data[0].cloudCover' $_weatherData)"
echo

# daily:
_time="$(jq '.daily.data[0].time' $_weatherData)"
_summary="$(jq '.daily.data[0].summary' $_weatherData)" && \
    _str_summary="$(_stringify "$_summary")"
    printf "%s:\t\t%s\n" "Daily Summary" "$_str_summary"
_sunriseTime="$(jq '.daily.data[0].sunriseTime' $_weatherData)"
_sunsetTime="$(jq '.daily.data[0].sunsetTime' $_weatherData)"
_moonPhase="$(jq '.daily.data[0].moonPhase' $_weatherData)"
_precipProbability="$(jq '.daily.data[0].precipProbability' $_weatherData)"
_precipType="$(jq '.daily.data[0].precipType' $_weatherData)"
_temperatureHigh="$(jq '.daily.data[0].temperatureHigh' $_weatherData)"
_temperatureLow="$(jq '.daily.data[0].temperatureLow' $_weatherData)"
_cloudCover="$(jq '.daily.data[0].cloudCover' $_weatherData)"
_uvIndex="$(jq '.daily.data[0].uvIndex' $_weatherData)"
echo

# additional info:
#   location

# units:
#   _degC
#   _mB/hPa
#   _%RH
#   _%
#   _km/h
#   _degs
#   _%


# vim: ft=sh
